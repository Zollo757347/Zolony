type Query {
  checkMyMap(name: String!, passWord: String!, mapName: String!): Map!
  checkUser(name: String!, passWord: String!): UserInfo! 

  checkMap(mapName: String!): Map!
}

type Mutation {
  createAccount(name: String!, passWord: String!): UserInfo!
  editProfile(name: String!, passWord: String!, avatar: String!): UserInfo! 
  initialMyMap(name: String!, passWord: String!, mapName: String!, xLen: Integer, yLen: Integer!, zLen: Integer!): Map!
  editMyMap(name: String!, passWord: String!, mapName: String!, map: Map!): Map!

  initialMap: Boolean!

  deleteUser(name: String!, passWord: String!): Boolean!
  deleteUserMap(name: String!, passWord: String!, mapName: String!): Boolean!
}


type UserInfo {
  name: String!
  passWord: String!
  maps: [MapData]!
  avatar: String!
}


type MapData {
  xLen: Integer!
  yLen: Integer!
  zLen: Integer!
  mapName: String!
  playground: [[[BlockData!]!]!]!
}

type BlockData {
  x: Integer!
  y: Integer!
  z: Integer!
  blockName: String!
  type: Integer!
  states: BlockStates!
}

type BlockStates {
  power: Integer!
  source: Boolean!

  delay: Integer
  facing: String
  locked: Boolean
  powered: Boolean

  lit: Boolean

  east: Integer
  south: Integer
  west: Integer
  north: Integer
}













